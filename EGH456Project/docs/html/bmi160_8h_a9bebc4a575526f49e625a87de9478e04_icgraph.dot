digraph "bmi160_get_regs"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="bmi160_get_regs",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="This API reads the data from the given register address of sensor."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="bmi160_config_aux_mode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#a1a57c45da550b97a5361e84b12f2d2a4",tooltip="This API configures the 0x4C register and settings like Auxiliary sensor manual enable/ disable and a..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="bmi160_set_aux_auto_mode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#ae2a0b717765bc2ee40c0fb92d2f819d2",tooltip="This API is used to setup the auxiliary sensor of bmi160 in auto mode Thus enabling the auto update o..."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="bmi160_get_fifo_data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#ac37108690acb5072d5c19a0f4e677634",tooltip="This API reads the data from fifo buffer."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="bmi160_get_int_status",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#a53cb6c4b0f60f54bd49b7ff980e3e1d4",tooltip="This API gets the interrupt status from the sensor."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="bmi160_get_offsets",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#ac6d11bee70aafd12449413c0fce3f014",tooltip="This API reads and stores the offset values of accel and gyro."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="bmi160_get_power_mode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#aea47d4d4d9e7017cb1acf1842f0f8e02",tooltip="This API gets the power mode of the sensor."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="bmi160_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#a7a2e8b832a4cb12b441cba7371d73f6a",tooltip="This API is the entry point for sensor.It performs the selection of I2C/SPI read mechanism according ..."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="bmi160_read_aux_data\l_auto_mode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#ae1f173b8b1e4ba2601016cc5fe8edc29",tooltip="This API is used to read the raw uncompensated auxiliary sensor data of 8 bytes from BMI160 register ..."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="bmi160_read_step_counter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#a69193a88550ccf1d99e413dcb5f81730",tooltip="This API reads the step counter value."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="bmi160_set_fifo_config",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#ac5cead9788329ba97addba76997de01e",tooltip="This API sets the FIFO configuration in the sensor."];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="bmi160_set_fifo_down",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#a50cbe9d86cba2bb6ef91fdaf3f2ce529",tooltip="This API is used to configure the down sampling ratios of the accel and gyro data for FIFO...."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="bmi160_set_step_counter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#a5a9e71230b2c94b2e609c63def130abf",tooltip="This API enables or disable the step counter feature. 1 - enable step counter (0 - disable)"];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="bmi160_start_foc",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#a9a12ab7ac43b795f4b6faddde505eb88",tooltip="This API starts the FOC of accel and gyro."];
  Node1 -> Node15 [id="edge14_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="bmi160_update_nvm",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$bmi160_8c.html#a273ec1cf6a992e0050ce12f33ee4c070",tooltip="This API writes the image registers values to NVM which is stored even after POR or soft reset."];
}
